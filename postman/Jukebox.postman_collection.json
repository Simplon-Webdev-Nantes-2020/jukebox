{
	"info": {
		"_postman_id": "e3be1af5-9a7e-4fb5-b47c-bb1d12d85e02",
		"name": "Jukebox",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "login",
			"item": [
				{
					"name": "home",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{localhost}}/",
							"host": [
								"{{localhost}}"
							],
							"path": [
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "page login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const $ = cheerio.load(responseBody)\r",
									"\r",
									"pm.test(\"it should return a csrf\", () => { \r",
									"    const csrf_value = $(\"input[name='_csrf']\").val();\r",
									"    pm.expect(csrf_value).to.not.be.empty;\r",
									"    pm.environment.set(\"csrf_value\", csrf_value);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{localhost}}/login",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "page logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const $ = cheerio.load(responseBody)\r",
									"\r",
									"pm.test(\"it should return a csrf\", () => { \r",
									"    const csrf_value = $(\"input[name='_csrf']\").val();\r",
									"    pm.expect(csrf_value).to.not.be.empty;\r",
									"    pm.environment.set(\"csrf_value\", csrf_value);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{localhost}}/logout",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "login manu",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "username",
									"value": "manu",
									"type": "text"
								},
								{
									"key": "password",
									"value": "manu",
									"type": "text"
								},
								{
									"key": "_csrf",
									"value": "{{csrf_value}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{localhost}}/login",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "login toto",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "username",
									"value": "toto",
									"type": "text"
								},
								{
									"key": "password",
									"value": "toto",
									"type": "text"
								},
								{
									"key": "_csrf",
									"value": "{{csrf_value}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{localhost}}/login",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "login admin",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "username",
									"value": "admin",
									"type": "text"
								},
								{
									"key": "password",
									"value": "admin",
									"type": "text"
								},
								{
									"key": "_csrf",
									"value": "{{csrf_value}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{localhost}}/login",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "artist",
			"item": [
				{
					"name": "all artists",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/artists",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"artists"
							]
						}
					},
					"response": []
				},
				{
					"name": "get artist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response json should contain one collection\", function () {\r",
									"    pm.expect(pm.response.json()).to.have.property('id');\r",
									"    pm.expect(pm.response.json()).to.have.property('name');\r",
									"    pm.expect(pm.response.json()).to.have.property('bio');\r",
									"    pm.expect(pm.response.json()).to.have.property('fanNumber');\r",
									"});\r",
									"\r",
									"pm.test(\"test id\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id).greaterThan(0);\r",
									"});\r",
									"\r",
									"if (pm.environment.get(\"artist_id\") == 1)\r",
									"    pm.test(\"test values\", function () {\r",
									"        var jsonData = pm.response.json();\r",
									"        pm.expect(jsonData.id).eql(1);\r",
									"        pm.expect(jsonData.name).eql('Celtic woman');\r",
									"        pm.expect(jsonData.bio).not.eql(null);\r",
									"        pm.expect(jsonData.fanNumber).eql(31760);\r",
									"    });\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/artists/{{artist_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"artists",
								"{{artist_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get artist albums",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/artists/{{artist_id}}/albums",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"artists",
								"{{artist_id}}",
								"albums"
							]
						}
					},
					"response": []
				},
				{
					"name": "search artists",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/artists?search=tic",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"artists"
							],
							"query": [
								{
									"key": "search",
									"value": "tic"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create artist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// maj du nouvel artist dans l'environnement",
									"var jsonData = JSON.parse(responseBody);",
									"pm.environment.set(\"new_artist_id\", jsonData.id);",
									"",
									"// tests ",
									"",
									"pm.test(\"response is ok\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"response json should contain one collection\", function () {",
									"    pm.expect(pm.response.json()).to.have.property('id');",
									"    pm.expect(pm.response.json()).to.have.property('name');",
									"    pm.expect(pm.response.json()).to.have.property('bio');",
									"    pm.expect(pm.response.json()).to.have.property('fanNumber');",
									"});",
									"",
									"pm.test(\"test id\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).greaterThan(0);",
									"});",
									"",
									"pm.test(\"test name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.name).eql('AC/DC');",
									"});",
									"",
									"pm.test(\"test bio\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.bio).not.eql(null);",
									"});",
									"",
									"pm.test(\"test fan number\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.fanNumber).eql(7252046);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": 0,\n    \"name\": \"AC/DC\",\n    \"bio\": \"La famille Young quitte Glasgow en Ecosse et émigre à Sydney en Australie en 1963. Le fils cadet de sept frères George, guitariste et auteur compositeur y fonde The Easybeats avec le Hollandais Harry Vanda....\",\n    \"fanNumber\": 7252046\n}"
						},
						"url": {
							"raw": "{{base_url}}/artists",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"artists"
							]
						}
					},
					"response": [
						{
							"name": "Malformed Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Api-Key",
										"value": "{{postman_api_key}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"collection\": {\n    \"variables\": [],\n    \"info\": {\n      \"description\": \"This is just a sample collection.\",\n      \"schema\": \"https://schema.getpostman.com/json/collection/v2.0.0/collection.json\"\n    },\n    \"item\": [\n      {\n        \"name\": \"This is a folder\",\n        \"description\": \"\",\n        \"item\": [\n          {\n            \"name\": \"Sample POST Request\",\n            \"request\": {\n              \"url\": \"echo.getpostman.com/post\",\n              \"method\": \"POST\",\n              \"header\": [\n                {\n                  \"key\": \"Content-Type\",\n                  \"value\": \"application/json\",\n                  \"description\": \"\"\n                }\n              ],\n              \"body\": {\n                \"mode\": \"raw\",\n                \"raw\": \"{\\n\\t\\\"data\\\": \\\"123\\\"\\n}\"\n              },\n              \"description\": \"This is a sample POST Request\"\n            },\n            \"response\": []\n          }\n        ]\n      },\n      {\n        \"name\": \"Sample GET Request\",\n        \"request\": {\n          \"url\": \"echo.getpostman.com/get\",\n          \"method\": \"GET\",\n          \"header\": [],\n          \"body\": {\n            \"mode\": \"formdata\",\n            \"formdata\": []\n          },\n          \"description\": \"This is a sample GET Request\"\n        },\n        \"response\": []\n      }\n    ]\n  }\n}"
								},
								"url": {
									"raw": "https://api.getpostman.com/collections",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "",
									"name": "Access-Control-Allow-Credentials",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "",
									"name": "Access-Control-Allow-Headers",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "",
									"name": "Access-Control-Allow-Methods",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "",
									"name": "Access-Control-Allow-Origin",
									"description": ""
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "",
									"name": "Access-Control-Expose-Headers",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Length",
									"value": "94",
									"name": "Content-Length",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Wed, 23 Nov 2016 11:24:15 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "W/\"5e-pljLJKY51ijXQuNsHOu0qw\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Server",
									"value": "nginx/1.8.0",
									"name": "Server",
									"description": ""
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60",
									"name": "X-RateLimit-Limit",
									"description": ""
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "55",
									"name": "X-RateLimit-Remaining",
									"description": ""
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1479900267",
									"name": "X-RateLimit-Reset",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"error\":{\"name\":\"malformedRequestError\",\"message\":\"Missing required property: name at info\"}}"
						},
						{
							"name": "Create Collection in a Workspace",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Api-Key",
										"value": "{{postman_api_key}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"collection\": {\n    \"info\": {\n      \"name\": \"Sample Collection {{$randomInt}}\",\n      \"description\": \"This is just a sample collection.\",\n      \"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\"\n    },\n    \"item\": [\n      {\n        \"name\": \"This is a folder\",\n        \"item\": [\n          {\n            \"name\": \"Sample POST Request\",\n            \"request\": {\n              \"url\": \"https://postman-echo.com/post\",\n              \"method\": \"POST\",\n              \"header\": [\n                {\n                  \"key\": \"Content-Type\",\n                  \"value\": \"application/json\"\n                }\n              ],\n              \"body\": {\n                \"mode\": \"raw\",\n                \"raw\": \"{\\\"data\\\": \\\"123\\\"}\"\n              },\n              \"description\": \"This is a sample POST Request\"\n            }\n          }\n        ]\n      },\n      {\n        \"name\": \"Sample GET Request\",\n        \"request\": {\n          \"url\": \"https://postman-echo/get\",\n          \"method\": \"GET\",\n          \"description\": \"This is a sample GET Request\"\n        }\n      }\n    ]\n  }\n}"
								},
								"url": {
									"raw": "https://api.getpostman.com/collections?workspace={{workspace_id}}",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections"
									],
									"query": [
										{
											"key": "workspace",
											"value": "{{workspace_id}}",
											"description": "The workspace ID in which the collection is to be created"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n\t\"collection\": {\n\t\t\"id\": \"2412a72c-1d8e-491b-aced-93809c0e94e9\",\n    \"name\": \"Sample Collection\",\n    \"uid\": \"5852-2412a72c-1d8e-491b-aced-93809c0e94e9\"\n\t}\n}"
						},
						{
							"name": "Collection Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Api-Key",
										"value": "{{postman_api_key}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"collection\": {\n    \"variables\": [],\n    \"info\": {\n      \"name\": \"Sample Collection\",\n      \"description\": \"This is just a sample collection.\",\n      \"schema\": \"https://schema.getpostman.com/json/collection/v2.0.0/collection.json\"\n    },\n    \"item\": [\n      {\n        \"name\": \"This is a folder\",\n        \"description\": \"\",\n        \"item\": [\n          {\n            \"name\": \"Sample POST Request\",\n            \"request\": {\n              \"url\": \"echo.getpostman.com/post\",\n              \"method\": \"POST\",\n              \"header\": [\n                {\n                  \"key\": \"Content-Type\",\n                  \"value\": \"application/json\",\n                  \"description\": \"\"\n                }\n              ],\n              \"body\": {\n                \"mode\": \"raw\",\n                \"raw\": \"{\\n\\t\\\"data\\\": \\\"123\\\"\\n}\"\n              },\n              \"description\": \"This is a sample POST Request\"\n            },\n            \"response\": []\n          }\n        ]\n      },\n      {\n        \"name\": \"Sample GET Request\",\n        \"request\": {\n          \"url\": \"echo.getpostman.com/get\",\n          \"method\": \"GET\",\n          \"header\": [],\n          \"body\": {\n            \"mode\": \"formdata\",\n            \"formdata\": []\n          },\n          \"description\": \"This is a sample GET Request\"\n        },\n        \"response\": []\n      }\n    ]\n  }\n}"
								},
								"url": {
									"raw": "https://api.getpostman.com/collections",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "",
									"name": "Access-Control-Allow-Credentials",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "",
									"name": "Access-Control-Allow-Headers",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "",
									"name": "Access-Control-Allow-Methods",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "",
									"name": "Access-Control-Allow-Origin",
									"description": ""
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "",
									"name": "Access-Control-Expose-Headers",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Encoding",
									"value": "gzip",
									"name": "Content-Encoding",
									"description": ""
								},
								{
									"key": "Content-Length",
									"value": "109",
									"name": "Content-Length",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Wed, 23 Nov 2016 11:23:49 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "W/\"89-p4nfYdFl+5DEKOdB5g399Q\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Server",
									"value": "nginx/1.8.0",
									"name": "Server",
									"description": ""
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60",
									"name": "X-RateLimit-Limit",
									"description": ""
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "57",
									"name": "X-RateLimit-Remaining",
									"description": ""
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1479900267",
									"name": "X-RateLimit-Reset",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"collection\":{\"id\":\"2412a72c-1d8e-491b-aced-93809c0e94e9\",\"name\":\"Sample Collection\",\"uid\":\"5852-2412a72c-1d8e-491b-aced-93809c0e94e9\"}}"
						},
						{
							"name": "Collection Already Exists",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Api-Key",
										"value": "{{postman_api_key}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"collection\": {\n    \"variables\": [],\n    \"info\": {\n      \"_postman_id\": \"ac03df1d-90f0-401d-aa57-39c395253c80\",\n      \"name\": \"Sample Collection\",\n      \"description\": \"This is just a sample collection.\",\n      \"schema\": \"https://schema.getpostman.com/json/collection/v2.0.0/collection.json\"\n    },\n    \"item\": [\n      {\n        \"name\": \"This is a folder\",\n        \"description\": \"\",\n        \"item\": [\n          {\n            \"name\": \"Sample POST Request\",\n            \"request\": {\n              \"url\": \"echo.getpostman.com/post\",\n              \"method\": \"POST\",\n              \"header\": [\n                {\n                  \"key\": \"Content-Type\",\n                  \"value\": \"application/json\",\n                  \"description\": \"\"\n                }\n              ],\n              \"body\": {\n                \"mode\": \"raw\",\n                \"raw\": \"{\\n\\t\\\"data\\\": \\\"123\\\"\\n}\"\n              },\n              \"description\": \"This is a sample POST Request\"\n            },\n            \"response\": []\n          }\n        ]\n      },\n      {\n        \"name\": \"Sample GET Request\",\n        \"request\": {\n          \"url\": \"echo.getpostman.com/get\",\n          \"method\": \"GET\",\n          \"header\": [],\n          \"body\": {\n            \"mode\": \"formdata\",\n            \"formdata\": []\n          },\n          \"description\": \"This is a sample GET Request\"\n        },\n        \"response\": []\n      }\n    ]\n  }\n}"
								},
								"url": {
									"raw": "https://api.getpostman.com/collections",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "",
									"name": "Access-Control-Allow-Credentials",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "",
									"name": "Access-Control-Allow-Headers",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "",
									"name": "Access-Control-Allow-Methods",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "",
									"name": "Access-Control-Allow-Origin",
									"description": ""
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "",
									"name": "Access-Control-Expose-Headers",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Length",
									"value": "162",
									"name": "Content-Length",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Wed, 23 Nov 2016 11:26:15 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "W/\"a2-6Yn0MohF7SWjZhtKpPnEAQ\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Server",
									"value": "nginx/1.8.0",
									"name": "Server",
									"description": ""
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60",
									"name": "X-RateLimit-Limit",
									"description": ""
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "58",
									"name": "X-RateLimit-Remaining",
									"description": ""
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1479900431",
									"name": "X-RateLimit-Reset",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"error\":{\"name\":\"instanceFoundError\",\"message\":\"The specified item already exists.\",\"details\":{\"item\":\"collection\",\"id\":\"ac03df1d-90f0-401d-aa57-39c395253c80\"}}}"
						}
					]
				},
				{
					"name": "Update artist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is ok\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"response json should contain one collection\", function () {",
									"    pm.expect(pm.response.json()).to.have.property('id');",
									"    pm.expect(pm.response.json()).to.have.property('name');",
									"    pm.expect(pm.response.json()).to.have.property('bio');",
									"    pm.expect(pm.response.json()).to.have.property('fanNumber');",
									"});",
									"",
									"pm.test(\"test values\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.name).eql('AC/DC');",
									"    pm.expect(jsonData.bio).not.eql(null);",
									"    pm.expect(jsonData.fanNumber).eql(7252050);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": {{new_artist_id}},\n    \"name\": \"AC/DC\",\n    \"bio\": \"La famille Young quitte Glasgow en Ecosse et émigre à Sydney en Australie en 1963. Le fils cadet de sept frères George, guitariste et auteur compositeur y fonde The Easybeats avec le Hollandais Harry Vanda....\",\n    \"fanNumber\": 7252050\n}"
						},
						"url": {
							"raw": "{{base_url}}/artists/{{new_artist_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"artists",
								"{{new_artist_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Collection Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Api-Key",
										"value": "{{postman_api_key}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"collection\": {\n    \"variables\": [],\n    \"info\": {\n      \"name\": \"Sample Collection\",\n      \"description\": \"This is just a sample collection.\",\n      \"schema\": \"https://schema.getpostman.com/json/collection/v2.0.0/collection.json\"\n    },\n    \"item\": [\n      {\n        \"name\": \"This is a folder\",\n        \"description\": \"\",\n        \"item\": [\n          {\n            \"name\": \"Sample POST Request\",\n            \"request\": {\n              \"url\": \"echo.getpostman.com/post\",\n              \"method\": \"POST\",\n              \"header\": [\n                {\n                  \"key\": \"Content-Type\",\n                  \"value\": \"application/json\",\n                  \"description\": \"\"\n                }\n              ],\n              \"body\": {\n                \"mode\": \"raw\",\n                \"raw\": \"{\\n\\t\\\"data\\\": \\\"123\\\"\\n}\"\n              },\n              \"description\": \"This is a sample POST Request\"\n            },\n            \"response\": []\n          }\n        ]\n      },\n      {\n        \"name\": \"Sample GET Request\",\n        \"request\": {\n          \"url\": \"echo.getpostman.com/get\",\n          \"method\": \"GET\",\n          \"header\": [],\n          \"body\": {\n            \"mode\": \"formdata\",\n            \"formdata\": []\n          },\n          \"description\": \"This is a sample GET Request\"\n        },\n        \"response\": []\n      }\n    ]\n  }\n}"
								},
								"url": {
									"raw": "https://api.getpostman.com/collections",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "",
									"name": "Access-Control-Allow-Credentials",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "",
									"name": "Access-Control-Allow-Headers",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "",
									"name": "Access-Control-Allow-Methods",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "",
									"name": "Access-Control-Allow-Origin",
									"description": ""
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "",
									"name": "Access-Control-Expose-Headers",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Encoding",
									"value": "gzip",
									"name": "Content-Encoding",
									"description": ""
								},
								{
									"key": "Content-Length",
									"value": "109",
									"name": "Content-Length",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Wed, 23 Nov 2016 11:23:49 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "W/\"89-p4nfYdFl+5DEKOdB5g399Q\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Server",
									"value": "nginx/1.8.0",
									"name": "Server",
									"description": ""
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60",
									"name": "X-RateLimit-Limit",
									"description": ""
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "57",
									"name": "X-RateLimit-Remaining",
									"description": ""
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1479900267",
									"name": "X-RateLimit-Reset",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"collection\":{\"id\":\"2412a72c-1d8e-491b-aced-93809c0e94e9\",\"name\":\"Sample Collection\",\"uid\":\"5852-2412a72c-1d8e-491b-aced-93809c0e94e9\"}}"
						},
						{
							"name": "Create Collection in a Workspace",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Api-Key",
										"value": "{{postman_api_key}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"collection\": {\n    \"info\": {\n      \"name\": \"Sample Collection {{$randomInt}}\",\n      \"description\": \"This is just a sample collection.\",\n      \"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\"\n    },\n    \"item\": [\n      {\n        \"name\": \"This is a folder\",\n        \"item\": [\n          {\n            \"name\": \"Sample POST Request\",\n            \"request\": {\n              \"url\": \"https://postman-echo.com/post\",\n              \"method\": \"POST\",\n              \"header\": [\n                {\n                  \"key\": \"Content-Type\",\n                  \"value\": \"application/json\"\n                }\n              ],\n              \"body\": {\n                \"mode\": \"raw\",\n                \"raw\": \"{\\\"data\\\": \\\"123\\\"}\"\n              },\n              \"description\": \"This is a sample POST Request\"\n            }\n          }\n        ]\n      },\n      {\n        \"name\": \"Sample GET Request\",\n        \"request\": {\n          \"url\": \"https://postman-echo/get\",\n          \"method\": \"GET\",\n          \"description\": \"This is a sample GET Request\"\n        }\n      }\n    ]\n  }\n}"
								},
								"url": {
									"raw": "https://api.getpostman.com/collections?workspace={{workspace_id}}",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections"
									],
									"query": [
										{
											"key": "workspace",
											"value": "{{workspace_id}}",
											"description": "The workspace ID in which the collection is to be created"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n\t\"collection\": {\n\t\t\"id\": \"2412a72c-1d8e-491b-aced-93809c0e94e9\",\n    \"name\": \"Sample Collection\",\n    \"uid\": \"5852-2412a72c-1d8e-491b-aced-93809c0e94e9\"\n\t}\n}"
						},
						{
							"name": "Collection Already Exists",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Api-Key",
										"value": "{{postman_api_key}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"collection\": {\n    \"variables\": [],\n    \"info\": {\n      \"_postman_id\": \"ac03df1d-90f0-401d-aa57-39c395253c80\",\n      \"name\": \"Sample Collection\",\n      \"description\": \"This is just a sample collection.\",\n      \"schema\": \"https://schema.getpostman.com/json/collection/v2.0.0/collection.json\"\n    },\n    \"item\": [\n      {\n        \"name\": \"This is a folder\",\n        \"description\": \"\",\n        \"item\": [\n          {\n            \"name\": \"Sample POST Request\",\n            \"request\": {\n              \"url\": \"echo.getpostman.com/post\",\n              \"method\": \"POST\",\n              \"header\": [\n                {\n                  \"key\": \"Content-Type\",\n                  \"value\": \"application/json\",\n                  \"description\": \"\"\n                }\n              ],\n              \"body\": {\n                \"mode\": \"raw\",\n                \"raw\": \"{\\n\\t\\\"data\\\": \\\"123\\\"\\n}\"\n              },\n              \"description\": \"This is a sample POST Request\"\n            },\n            \"response\": []\n          }\n        ]\n      },\n      {\n        \"name\": \"Sample GET Request\",\n        \"request\": {\n          \"url\": \"echo.getpostman.com/get\",\n          \"method\": \"GET\",\n          \"header\": [],\n          \"body\": {\n            \"mode\": \"formdata\",\n            \"formdata\": []\n          },\n          \"description\": \"This is a sample GET Request\"\n        },\n        \"response\": []\n      }\n    ]\n  }\n}"
								},
								"url": {
									"raw": "https://api.getpostman.com/collections",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "",
									"name": "Access-Control-Allow-Credentials",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "",
									"name": "Access-Control-Allow-Headers",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "",
									"name": "Access-Control-Allow-Methods",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "",
									"name": "Access-Control-Allow-Origin",
									"description": ""
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "",
									"name": "Access-Control-Expose-Headers",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Length",
									"value": "162",
									"name": "Content-Length",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Wed, 23 Nov 2016 11:26:15 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "W/\"a2-6Yn0MohF7SWjZhtKpPnEAQ\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Server",
									"value": "nginx/1.8.0",
									"name": "Server",
									"description": ""
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60",
									"name": "X-RateLimit-Limit",
									"description": ""
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "58",
									"name": "X-RateLimit-Remaining",
									"description": ""
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1479900431",
									"name": "X-RateLimit-Reset",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"error\":{\"name\":\"instanceFoundError\",\"message\":\"The specified item already exists.\",\"details\":{\"item\":\"collection\",\"id\":\"ac03df1d-90f0-401d-aa57-39c395253c80\"}}}"
						},
						{
							"name": "Malformed Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Api-Key",
										"value": "{{postman_api_key}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"collection\": {\n    \"variables\": [],\n    \"info\": {\n      \"description\": \"This is just a sample collection.\",\n      \"schema\": \"https://schema.getpostman.com/json/collection/v2.0.0/collection.json\"\n    },\n    \"item\": [\n      {\n        \"name\": \"This is a folder\",\n        \"description\": \"\",\n        \"item\": [\n          {\n            \"name\": \"Sample POST Request\",\n            \"request\": {\n              \"url\": \"echo.getpostman.com/post\",\n              \"method\": \"POST\",\n              \"header\": [\n                {\n                  \"key\": \"Content-Type\",\n                  \"value\": \"application/json\",\n                  \"description\": \"\"\n                }\n              ],\n              \"body\": {\n                \"mode\": \"raw\",\n                \"raw\": \"{\\n\\t\\\"data\\\": \\\"123\\\"\\n}\"\n              },\n              \"description\": \"This is a sample POST Request\"\n            },\n            \"response\": []\n          }\n        ]\n      },\n      {\n        \"name\": \"Sample GET Request\",\n        \"request\": {\n          \"url\": \"echo.getpostman.com/get\",\n          \"method\": \"GET\",\n          \"header\": [],\n          \"body\": {\n            \"mode\": \"formdata\",\n            \"formdata\": []\n          },\n          \"description\": \"This is a sample GET Request\"\n        },\n        \"response\": []\n      }\n    ]\n  }\n}"
								},
								"url": {
									"raw": "https://api.getpostman.com/collections",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "",
									"name": "Access-Control-Allow-Credentials",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "",
									"name": "Access-Control-Allow-Headers",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "",
									"name": "Access-Control-Allow-Methods",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "",
									"name": "Access-Control-Allow-Origin",
									"description": ""
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "",
									"name": "Access-Control-Expose-Headers",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Length",
									"value": "94",
									"name": "Content-Length",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Wed, 23 Nov 2016 11:24:15 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "W/\"5e-pljLJKY51ijXQuNsHOu0qw\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Server",
									"value": "nginx/1.8.0",
									"name": "Server",
									"description": ""
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60",
									"name": "X-RateLimit-Limit",
									"description": ""
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "55",
									"name": "X-RateLimit-Remaining",
									"description": ""
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1479900267",
									"name": "X-RateLimit-Reset",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"error\":{\"name\":\"malformedRequestError\",\"message\":\"Missing required property: name at info\"}}"
						}
					]
				},
				{
					"name": "delete artist",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/artists/{{new_artist_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"artists",
								"{{new_artist_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "album",
			"item": [
				{
					"name": "all albums",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/albums",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"albums"
							]
						}
					},
					"response": []
				},
				{
					"name": "get album",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response json should contain one collection\", function () {\r",
									"    pm.expect(pm.response.json()).to.have.property('id');\r",
									"    pm.expect(pm.response.json()).to.have.property('title');\r",
									"    pm.expect(pm.response.json()).to.have.property('releaseDate');\r",
									"    pm.expect(pm.response.json()).to.have.property('artist');\r",
									"    pm.expect(pm.response.json()).to.have.property('tracks');\r",
									"});\r",
									"\r",
									"pm.test(\"test id\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id).greaterThan(0);\r",
									"});\r",
									"\r",
									"if (pm.environment.get(\"album_id\") == 2) {\r",
									"    pm.test(\"test values\", function () {\r",
									"        var jsonData = pm.response.json();\r",
									"        pm.expect(jsonData.id).eql(2);\r",
									"        pm.expect(jsonData.title).eql('Le Meilleur de la Musique Irlandaise - Les Plus Beaux Airs Celtiques');\r",
									"    });\r",
									"\r",
									"    pm.test(\"test values\", function () {\r",
									"        var jsonData = pm.response.json();\r",
									"        pm.expect(jsonData.tracks.length).eql(3);\r",
									"    });\r",
									"}\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/albums/{{album_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"albums",
								"{{album_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "search albums",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/albums?search=LA",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"albums"
							],
							"query": [
								{
									"key": "search",
									"value": "LA"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create album",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// maj du nouvel album dans l'environnement",
									"var jsonData = JSON.parse(responseBody);",
									"pm.environment.set(\"new_album_id\", jsonData.id);",
									"",
									"// tests ",
									"",
									"pm.test(\"response is ok\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"response json should contain one collection\", function () {",
									"    pm.expect(pm.response.json()).to.have.property('id');",
									"    pm.expect(pm.response.json()).to.have.property('title');",
									"    pm.expect(pm.response.json()).to.have.property('releaseDate');",
									"    pm.expect(pm.response.json()).to.have.property('artist');",
									"    pm.expect(pm.response.json()).to.have.property('tracks');",
									"});",
									"",
									"pm.test(\"test id\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).greaterThan(0);",
									"});",
									"",
									"pm.test(\"test values\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.title).eql('PYRAMIDE (Version deluxe)');",
									"    pm.expect(jsonData.releaseDate).eql('2019-11-08');",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{csrf_value}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": 0,\n    \"title\": \"PYRAMIDE (Version deluxe)\",\n    \"releaseDate\": \"2019-11-08\",\n    \"artist\": {\n        \"id\": 2\n    },\n    \"tracks\": [\n        {\n            \"id\": 0,\n            \"title\": \"Pyramide\",\n            \"duration\": 175,\n            \"preview\": \"https://cdns-preview-a.dzcdn.net/stream/c-a42bafb687f3c4b4cb6cfc96e620887d-7.mp3\"\n        },\n        {\n            \"id\": 0,\n            \"title\": \"Les planètes\",\n            \"duration\": 232,\n            \"preview\": \"https://cdns-preview-6.dzcdn.net/stream/c-6d86ef7c721648224a10cf5f20ec37e3-6.mp3\"\n        },\n        {\n            \"id\": 0,\n            \"title\": \"Ouh na na\",\n            \"duration\": 182,\n            \"preview\": \"https://cdns-preview-c.dzcdn.net/stream/c-caa0bd02fd2f4f9221ebaff32e67cfe1-6.mp3\"\n        },\n        {\n            \"id\": 0,\n            \"title\": \"Seul\",\n            \"duration\": 175,\n            \"preview\": \"https://cdns-preview-0.dzcdn.net/stream/c-0c201c858167dae678c4330641127244-6.mp3\"\n        }\n    ]\n}\n"
						},
						"url": {
							"raw": "{{base_url}}/albums",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"albums"
							]
						}
					},
					"response": [
						{
							"name": "Collection Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Api-Key",
										"value": "{{postman_api_key}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"collection\": {\n    \"variables\": [],\n    \"info\": {\n      \"name\": \"Sample Collection\",\n      \"description\": \"This is just a sample collection.\",\n      \"schema\": \"https://schema.getpostman.com/json/collection/v2.0.0/collection.json\"\n    },\n    \"item\": [\n      {\n        \"name\": \"This is a folder\",\n        \"description\": \"\",\n        \"item\": [\n          {\n            \"name\": \"Sample POST Request\",\n            \"request\": {\n              \"url\": \"echo.getpostman.com/post\",\n              \"method\": \"POST\",\n              \"header\": [\n                {\n                  \"key\": \"Content-Type\",\n                  \"value\": \"application/json\",\n                  \"description\": \"\"\n                }\n              ],\n              \"body\": {\n                \"mode\": \"raw\",\n                \"raw\": \"{\\n\\t\\\"data\\\": \\\"123\\\"\\n}\"\n              },\n              \"description\": \"This is a sample POST Request\"\n            },\n            \"response\": []\n          }\n        ]\n      },\n      {\n        \"name\": \"Sample GET Request\",\n        \"request\": {\n          \"url\": \"echo.getpostman.com/get\",\n          \"method\": \"GET\",\n          \"header\": [],\n          \"body\": {\n            \"mode\": \"formdata\",\n            \"formdata\": []\n          },\n          \"description\": \"This is a sample GET Request\"\n        },\n        \"response\": []\n      }\n    ]\n  }\n}"
								},
								"url": {
									"raw": "https://api.getpostman.com/collections",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "",
									"name": "Access-Control-Allow-Credentials",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "",
									"name": "Access-Control-Allow-Headers",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "",
									"name": "Access-Control-Allow-Methods",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "",
									"name": "Access-Control-Allow-Origin",
									"description": ""
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "",
									"name": "Access-Control-Expose-Headers",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Encoding",
									"value": "gzip",
									"name": "Content-Encoding",
									"description": ""
								},
								{
									"key": "Content-Length",
									"value": "109",
									"name": "Content-Length",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Wed, 23 Nov 2016 11:23:49 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "W/\"89-p4nfYdFl+5DEKOdB5g399Q\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Server",
									"value": "nginx/1.8.0",
									"name": "Server",
									"description": ""
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60",
									"name": "X-RateLimit-Limit",
									"description": ""
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "57",
									"name": "X-RateLimit-Remaining",
									"description": ""
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1479900267",
									"name": "X-RateLimit-Reset",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"collection\":{\"id\":\"2412a72c-1d8e-491b-aced-93809c0e94e9\",\"name\":\"Sample Collection\",\"uid\":\"5852-2412a72c-1d8e-491b-aced-93809c0e94e9\"}}"
						},
						{
							"name": "Collection Already Exists",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Api-Key",
										"value": "{{postman_api_key}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"collection\": {\n    \"variables\": [],\n    \"info\": {\n      \"_postman_id\": \"ac03df1d-90f0-401d-aa57-39c395253c80\",\n      \"name\": \"Sample Collection\",\n      \"description\": \"This is just a sample collection.\",\n      \"schema\": \"https://schema.getpostman.com/json/collection/v2.0.0/collection.json\"\n    },\n    \"item\": [\n      {\n        \"name\": \"This is a folder\",\n        \"description\": \"\",\n        \"item\": [\n          {\n            \"name\": \"Sample POST Request\",\n            \"request\": {\n              \"url\": \"echo.getpostman.com/post\",\n              \"method\": \"POST\",\n              \"header\": [\n                {\n                  \"key\": \"Content-Type\",\n                  \"value\": \"application/json\",\n                  \"description\": \"\"\n                }\n              ],\n              \"body\": {\n                \"mode\": \"raw\",\n                \"raw\": \"{\\n\\t\\\"data\\\": \\\"123\\\"\\n}\"\n              },\n              \"description\": \"This is a sample POST Request\"\n            },\n            \"response\": []\n          }\n        ]\n      },\n      {\n        \"name\": \"Sample GET Request\",\n        \"request\": {\n          \"url\": \"echo.getpostman.com/get\",\n          \"method\": \"GET\",\n          \"header\": [],\n          \"body\": {\n            \"mode\": \"formdata\",\n            \"formdata\": []\n          },\n          \"description\": \"This is a sample GET Request\"\n        },\n        \"response\": []\n      }\n    ]\n  }\n}"
								},
								"url": {
									"raw": "https://api.getpostman.com/collections",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "",
									"name": "Access-Control-Allow-Credentials",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "",
									"name": "Access-Control-Allow-Headers",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "",
									"name": "Access-Control-Allow-Methods",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "",
									"name": "Access-Control-Allow-Origin",
									"description": ""
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "",
									"name": "Access-Control-Expose-Headers",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Length",
									"value": "162",
									"name": "Content-Length",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Wed, 23 Nov 2016 11:26:15 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "W/\"a2-6Yn0MohF7SWjZhtKpPnEAQ\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Server",
									"value": "nginx/1.8.0",
									"name": "Server",
									"description": ""
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60",
									"name": "X-RateLimit-Limit",
									"description": ""
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "58",
									"name": "X-RateLimit-Remaining",
									"description": ""
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1479900431",
									"name": "X-RateLimit-Reset",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"error\":{\"name\":\"instanceFoundError\",\"message\":\"The specified item already exists.\",\"details\":{\"item\":\"collection\",\"id\":\"ac03df1d-90f0-401d-aa57-39c395253c80\"}}}"
						},
						{
							"name": "Create Collection in a Workspace",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Api-Key",
										"value": "{{postman_api_key}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"collection\": {\n    \"info\": {\n      \"name\": \"Sample Collection {{$randomInt}}\",\n      \"description\": \"This is just a sample collection.\",\n      \"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\"\n    },\n    \"item\": [\n      {\n        \"name\": \"This is a folder\",\n        \"item\": [\n          {\n            \"name\": \"Sample POST Request\",\n            \"request\": {\n              \"url\": \"https://postman-echo.com/post\",\n              \"method\": \"POST\",\n              \"header\": [\n                {\n                  \"key\": \"Content-Type\",\n                  \"value\": \"application/json\"\n                }\n              ],\n              \"body\": {\n                \"mode\": \"raw\",\n                \"raw\": \"{\\\"data\\\": \\\"123\\\"}\"\n              },\n              \"description\": \"This is a sample POST Request\"\n            }\n          }\n        ]\n      },\n      {\n        \"name\": \"Sample GET Request\",\n        \"request\": {\n          \"url\": \"https://postman-echo/get\",\n          \"method\": \"GET\",\n          \"description\": \"This is a sample GET Request\"\n        }\n      }\n    ]\n  }\n}"
								},
								"url": {
									"raw": "https://api.getpostman.com/collections?workspace={{workspace_id}}",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections"
									],
									"query": [
										{
											"key": "workspace",
											"value": "{{workspace_id}}",
											"description": "The workspace ID in which the collection is to be created"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n\t\"collection\": {\n\t\t\"id\": \"2412a72c-1d8e-491b-aced-93809c0e94e9\",\n    \"name\": \"Sample Collection\",\n    \"uid\": \"5852-2412a72c-1d8e-491b-aced-93809c0e94e9\"\n\t}\n}"
						},
						{
							"name": "Malformed Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Api-Key",
										"value": "{{postman_api_key}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"collection\": {\n    \"variables\": [],\n    \"info\": {\n      \"description\": \"This is just a sample collection.\",\n      \"schema\": \"https://schema.getpostman.com/json/collection/v2.0.0/collection.json\"\n    },\n    \"item\": [\n      {\n        \"name\": \"This is a folder\",\n        \"description\": \"\",\n        \"item\": [\n          {\n            \"name\": \"Sample POST Request\",\n            \"request\": {\n              \"url\": \"echo.getpostman.com/post\",\n              \"method\": \"POST\",\n              \"header\": [\n                {\n                  \"key\": \"Content-Type\",\n                  \"value\": \"application/json\",\n                  \"description\": \"\"\n                }\n              ],\n              \"body\": {\n                \"mode\": \"raw\",\n                \"raw\": \"{\\n\\t\\\"data\\\": \\\"123\\\"\\n}\"\n              },\n              \"description\": \"This is a sample POST Request\"\n            },\n            \"response\": []\n          }\n        ]\n      },\n      {\n        \"name\": \"Sample GET Request\",\n        \"request\": {\n          \"url\": \"echo.getpostman.com/get\",\n          \"method\": \"GET\",\n          \"header\": [],\n          \"body\": {\n            \"mode\": \"formdata\",\n            \"formdata\": []\n          },\n          \"description\": \"This is a sample GET Request\"\n        },\n        \"response\": []\n      }\n    ]\n  }\n}"
								},
								"url": {
									"raw": "https://api.getpostman.com/collections",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "",
									"name": "Access-Control-Allow-Credentials",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "",
									"name": "Access-Control-Allow-Headers",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "",
									"name": "Access-Control-Allow-Methods",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "",
									"name": "Access-Control-Allow-Origin",
									"description": ""
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "",
									"name": "Access-Control-Expose-Headers",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Length",
									"value": "94",
									"name": "Content-Length",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Wed, 23 Nov 2016 11:24:15 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "W/\"5e-pljLJKY51ijXQuNsHOu0qw\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Server",
									"value": "nginx/1.8.0",
									"name": "Server",
									"description": ""
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60",
									"name": "X-RateLimit-Limit",
									"description": ""
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "55",
									"name": "X-RateLimit-Remaining",
									"description": ""
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1479900267",
									"name": "X-RateLimit-Reset",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"error\":{\"name\":\"malformedRequestError\",\"message\":\"Missing required property: name at info\"}}"
						}
					]
				},
				{
					"name": "Update album",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is ok\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": 4,\n    \"title\": \"PYRAMIDE (Version deluxe)\",\n    \"releasedate\": \"2020-11-03\",\n    \"artist\": {\n        \"id\": 2\n    },\n    \"tracks\": [\n        {\n            \"id\": 25,\n            \"title\": \"Pyramide\",\n            \"duration\": 175,\n            \"preview\": \"https://cdns-preview-a.dzcdn.net/stream/c-a42bafb687f3c4b4cb6cfc96e620887d-7.mp3\"\n        },\n        {\n            \"id\": 27,\n            \"title\": \"Ouh na na\",\n            \"duration\": 182,\n            \"preview\": \"https://cdns-preview-c.dzcdn.net/stream/c-caa0bd02fd2f4f9221ebaff32e67cfe1-6.mp3\"\n        },\n        {\n            \"id\": 28,\n            \"title\": \"Seul\",\n            \"duration\": 175,\n            \"preview\": \"https://cdns-preview-0.dzcdn.net/stream/c-0c201c858167dae678c4330641127244-6.mp3\"\n        },\n        {\n            \"id\": 0,\n            \"title\": \"La regarder s'en aller\",\n            \"duration\": 206,\n            \"preview\": \"https://cdns-preview-5.dzcdn.net/stream/c-5da53889aa1ff263f7df5b9a2504c2b8-7.mp3\"\n        }\n    ]\n}\n"
						},
						"url": {
							"raw": "{{base_url}}/albums/{{new_album_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"albums",
								"{{new_album_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Collection Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Api-Key",
										"value": "{{postman_api_key}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"collection\": {\n    \"variables\": [],\n    \"info\": {\n      \"name\": \"Sample Collection\",\n      \"description\": \"This is just a sample collection.\",\n      \"schema\": \"https://schema.getpostman.com/json/collection/v2.0.0/collection.json\"\n    },\n    \"item\": [\n      {\n        \"name\": \"This is a folder\",\n        \"description\": \"\",\n        \"item\": [\n          {\n            \"name\": \"Sample POST Request\",\n            \"request\": {\n              \"url\": \"echo.getpostman.com/post\",\n              \"method\": \"POST\",\n              \"header\": [\n                {\n                  \"key\": \"Content-Type\",\n                  \"value\": \"application/json\",\n                  \"description\": \"\"\n                }\n              ],\n              \"body\": {\n                \"mode\": \"raw\",\n                \"raw\": \"{\\n\\t\\\"data\\\": \\\"123\\\"\\n}\"\n              },\n              \"description\": \"This is a sample POST Request\"\n            },\n            \"response\": []\n          }\n        ]\n      },\n      {\n        \"name\": \"Sample GET Request\",\n        \"request\": {\n          \"url\": \"echo.getpostman.com/get\",\n          \"method\": \"GET\",\n          \"header\": [],\n          \"body\": {\n            \"mode\": \"formdata\",\n            \"formdata\": []\n          },\n          \"description\": \"This is a sample GET Request\"\n        },\n        \"response\": []\n      }\n    ]\n  }\n}"
								},
								"url": {
									"raw": "https://api.getpostman.com/collections",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "",
									"name": "Access-Control-Allow-Credentials",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "",
									"name": "Access-Control-Allow-Headers",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "",
									"name": "Access-Control-Allow-Methods",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "",
									"name": "Access-Control-Allow-Origin",
									"description": ""
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "",
									"name": "Access-Control-Expose-Headers",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Encoding",
									"value": "gzip",
									"name": "Content-Encoding",
									"description": ""
								},
								{
									"key": "Content-Length",
									"value": "109",
									"name": "Content-Length",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Wed, 23 Nov 2016 11:23:49 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "W/\"89-p4nfYdFl+5DEKOdB5g399Q\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Server",
									"value": "nginx/1.8.0",
									"name": "Server",
									"description": ""
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60",
									"name": "X-RateLimit-Limit",
									"description": ""
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "57",
									"name": "X-RateLimit-Remaining",
									"description": ""
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1479900267",
									"name": "X-RateLimit-Reset",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"collection\":{\"id\":\"2412a72c-1d8e-491b-aced-93809c0e94e9\",\"name\":\"Sample Collection\",\"uid\":\"5852-2412a72c-1d8e-491b-aced-93809c0e94e9\"}}"
						},
						{
							"name": "Collection Already Exists",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Api-Key",
										"value": "{{postman_api_key}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"collection\": {\n    \"variables\": [],\n    \"info\": {\n      \"_postman_id\": \"ac03df1d-90f0-401d-aa57-39c395253c80\",\n      \"name\": \"Sample Collection\",\n      \"description\": \"This is just a sample collection.\",\n      \"schema\": \"https://schema.getpostman.com/json/collection/v2.0.0/collection.json\"\n    },\n    \"item\": [\n      {\n        \"name\": \"This is a folder\",\n        \"description\": \"\",\n        \"item\": [\n          {\n            \"name\": \"Sample POST Request\",\n            \"request\": {\n              \"url\": \"echo.getpostman.com/post\",\n              \"method\": \"POST\",\n              \"header\": [\n                {\n                  \"key\": \"Content-Type\",\n                  \"value\": \"application/json\",\n                  \"description\": \"\"\n                }\n              ],\n              \"body\": {\n                \"mode\": \"raw\",\n                \"raw\": \"{\\n\\t\\\"data\\\": \\\"123\\\"\\n}\"\n              },\n              \"description\": \"This is a sample POST Request\"\n            },\n            \"response\": []\n          }\n        ]\n      },\n      {\n        \"name\": \"Sample GET Request\",\n        \"request\": {\n          \"url\": \"echo.getpostman.com/get\",\n          \"method\": \"GET\",\n          \"header\": [],\n          \"body\": {\n            \"mode\": \"formdata\",\n            \"formdata\": []\n          },\n          \"description\": \"This is a sample GET Request\"\n        },\n        \"response\": []\n      }\n    ]\n  }\n}"
								},
								"url": {
									"raw": "https://api.getpostman.com/collections",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "",
									"name": "Access-Control-Allow-Credentials",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "",
									"name": "Access-Control-Allow-Headers",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "",
									"name": "Access-Control-Allow-Methods",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "",
									"name": "Access-Control-Allow-Origin",
									"description": ""
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "",
									"name": "Access-Control-Expose-Headers",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Length",
									"value": "162",
									"name": "Content-Length",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Wed, 23 Nov 2016 11:26:15 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "W/\"a2-6Yn0MohF7SWjZhtKpPnEAQ\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Server",
									"value": "nginx/1.8.0",
									"name": "Server",
									"description": ""
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60",
									"name": "X-RateLimit-Limit",
									"description": ""
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "58",
									"name": "X-RateLimit-Remaining",
									"description": ""
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1479900431",
									"name": "X-RateLimit-Reset",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"error\":{\"name\":\"instanceFoundError\",\"message\":\"The specified item already exists.\",\"details\":{\"item\":\"collection\",\"id\":\"ac03df1d-90f0-401d-aa57-39c395253c80\"}}}"
						},
						{
							"name": "Malformed Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Api-Key",
										"value": "{{postman_api_key}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"collection\": {\n    \"variables\": [],\n    \"info\": {\n      \"description\": \"This is just a sample collection.\",\n      \"schema\": \"https://schema.getpostman.com/json/collection/v2.0.0/collection.json\"\n    },\n    \"item\": [\n      {\n        \"name\": \"This is a folder\",\n        \"description\": \"\",\n        \"item\": [\n          {\n            \"name\": \"Sample POST Request\",\n            \"request\": {\n              \"url\": \"echo.getpostman.com/post\",\n              \"method\": \"POST\",\n              \"header\": [\n                {\n                  \"key\": \"Content-Type\",\n                  \"value\": \"application/json\",\n                  \"description\": \"\"\n                }\n              ],\n              \"body\": {\n                \"mode\": \"raw\",\n                \"raw\": \"{\\n\\t\\\"data\\\": \\\"123\\\"\\n}\"\n              },\n              \"description\": \"This is a sample POST Request\"\n            },\n            \"response\": []\n          }\n        ]\n      },\n      {\n        \"name\": \"Sample GET Request\",\n        \"request\": {\n          \"url\": \"echo.getpostman.com/get\",\n          \"method\": \"GET\",\n          \"header\": [],\n          \"body\": {\n            \"mode\": \"formdata\",\n            \"formdata\": []\n          },\n          \"description\": \"This is a sample GET Request\"\n        },\n        \"response\": []\n      }\n    ]\n  }\n}"
								},
								"url": {
									"raw": "https://api.getpostman.com/collections",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "",
									"name": "Access-Control-Allow-Credentials",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "",
									"name": "Access-Control-Allow-Headers",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "",
									"name": "Access-Control-Allow-Methods",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "",
									"name": "Access-Control-Allow-Origin",
									"description": ""
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "",
									"name": "Access-Control-Expose-Headers",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Length",
									"value": "94",
									"name": "Content-Length",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Wed, 23 Nov 2016 11:24:15 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "W/\"5e-pljLJKY51ijXQuNsHOu0qw\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Server",
									"value": "nginx/1.8.0",
									"name": "Server",
									"description": ""
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60",
									"name": "X-RateLimit-Limit",
									"description": ""
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "55",
									"name": "X-RateLimit-Remaining",
									"description": ""
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1479900267",
									"name": "X-RateLimit-Reset",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"error\":{\"name\":\"malformedRequestError\",\"message\":\"Missing required property: name at info\"}}"
						},
						{
							"name": "Create Collection in a Workspace",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Api-Key",
										"value": "{{postman_api_key}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"collection\": {\n    \"info\": {\n      \"name\": \"Sample Collection {{$randomInt}}\",\n      \"description\": \"This is just a sample collection.\",\n      \"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\"\n    },\n    \"item\": [\n      {\n        \"name\": \"This is a folder\",\n        \"item\": [\n          {\n            \"name\": \"Sample POST Request\",\n            \"request\": {\n              \"url\": \"https://postman-echo.com/post\",\n              \"method\": \"POST\",\n              \"header\": [\n                {\n                  \"key\": \"Content-Type\",\n                  \"value\": \"application/json\"\n                }\n              ],\n              \"body\": {\n                \"mode\": \"raw\",\n                \"raw\": \"{\\\"data\\\": \\\"123\\\"}\"\n              },\n              \"description\": \"This is a sample POST Request\"\n            }\n          }\n        ]\n      },\n      {\n        \"name\": \"Sample GET Request\",\n        \"request\": {\n          \"url\": \"https://postman-echo/get\",\n          \"method\": \"GET\",\n          \"description\": \"This is a sample GET Request\"\n        }\n      }\n    ]\n  }\n}"
								},
								"url": {
									"raw": "https://api.getpostman.com/collections?workspace={{workspace_id}}",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections"
									],
									"query": [
										{
											"key": "workspace",
											"value": "{{workspace_id}}",
											"description": "The workspace ID in which the collection is to be created"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n\t\"collection\": {\n\t\t\"id\": \"2412a72c-1d8e-491b-aced-93809c0e94e9\",\n    \"name\": \"Sample Collection\",\n    \"uid\": \"5852-2412a72c-1d8e-491b-aced-93809c0e94e9\"\n\t}\n}"
						}
					]
				},
				{
					"name": "delete album",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/albums/{{new_album_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"albums",
								"{{new_album_id}}"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "track",
			"item": [
				{
					"name": "all tracks",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/tracks",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"tracks"
							]
						}
					},
					"response": []
				},
				{
					"name": "get track",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response json should contain one collection\", function () {\r",
									"    pm.expect(pm.response.json()).to.have.property('id');\r",
									"    pm.expect(pm.response.json()).to.have.property('title');\r",
									"    pm.expect(pm.response.json()).to.have.property('duration');\r",
									"    pm.expect(pm.response.json()).to.have.property('preview');\r",
									"});\r",
									"\r",
									"pm.test(\"test id\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id).greaterThan(0);\r",
									"});\r",
									"\r",
									"if (pm.environment.get(\"track_id\") == 3)\r",
									"    pm.test(\"test values\", function () {\r",
									"        var jsonData = pm.response.json();\r",
									"        pm.expect(jsonData.id).eql(3);\r",
									"        pm.expect(jsonData.title).eql('Mon univers');\r",
									"    });\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/tracks/{{track_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"tracks",
								"{{track_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "search tracks",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/tracks?search=l",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"tracks"
							],
							"query": [
								{
									"key": "search",
									"value": "l"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create track",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// maj du nouveau track dans l'environnement",
									"var jsonData = JSON.parse(responseBody);",
									"pm.environment.set(\"new_track_id\", jsonData.id);",
									"",
									"// tests ",
									"",
									"pm.test(\"response is ok\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"response json should contain one collection\", function () {",
									"    pm.expect(pm.response.json()).to.have.property('id');",
									"    pm.expect(pm.response.json()).to.have.property('title');",
									"    pm.expect(pm.response.json()).to.have.property('duration');",
									"    pm.expect(pm.response.json()).to.have.property('preview');",
									"});",
									"",
									"pm.test(\"test id\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).greaterThan(0);",
									"});",
									"",
									"pm.test(\"test values\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.title).eql('Follow Me');",
									"    pm.expect(jsonData.duration).eql(218);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": 0,\n    \"title\": \"Follow Me\",\n    \"duration\": 218,\n    \"preview\": \"https://cdns-preview-2.dzcdn.net/stream/c-25361eb4c1bbe04d9d4aee18722b6b55-6.mp3\",\n    \"album\": {\n        \"id\": 3\n    }\n}\n"
						},
						"url": {
							"raw": "{{base_url}}/tracks",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"tracks"
							]
						}
					},
					"response": [
						{
							"name": "Create Collection in a Workspace",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Api-Key",
										"value": "{{postman_api_key}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"collection\": {\n    \"info\": {\n      \"name\": \"Sample Collection {{$randomInt}}\",\n      \"description\": \"This is just a sample collection.\",\n      \"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\"\n    },\n    \"item\": [\n      {\n        \"name\": \"This is a folder\",\n        \"item\": [\n          {\n            \"name\": \"Sample POST Request\",\n            \"request\": {\n              \"url\": \"https://postman-echo.com/post\",\n              \"method\": \"POST\",\n              \"header\": [\n                {\n                  \"key\": \"Content-Type\",\n                  \"value\": \"application/json\"\n                }\n              ],\n              \"body\": {\n                \"mode\": \"raw\",\n                \"raw\": \"{\\\"data\\\": \\\"123\\\"}\"\n              },\n              \"description\": \"This is a sample POST Request\"\n            }\n          }\n        ]\n      },\n      {\n        \"name\": \"Sample GET Request\",\n        \"request\": {\n          \"url\": \"https://postman-echo/get\",\n          \"method\": \"GET\",\n          \"description\": \"This is a sample GET Request\"\n        }\n      }\n    ]\n  }\n}"
								},
								"url": {
									"raw": "https://api.getpostman.com/collections?workspace={{workspace_id}}",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections"
									],
									"query": [
										{
											"key": "workspace",
											"value": "{{workspace_id}}",
											"description": "The workspace ID in which the collection is to be created"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n\t\"collection\": {\n\t\t\"id\": \"2412a72c-1d8e-491b-aced-93809c0e94e9\",\n    \"name\": \"Sample Collection\",\n    \"uid\": \"5852-2412a72c-1d8e-491b-aced-93809c0e94e9\"\n\t}\n}"
						},
						{
							"name": "Collection Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Api-Key",
										"value": "{{postman_api_key}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"collection\": {\n    \"variables\": [],\n    \"info\": {\n      \"name\": \"Sample Collection\",\n      \"description\": \"This is just a sample collection.\",\n      \"schema\": \"https://schema.getpostman.com/json/collection/v2.0.0/collection.json\"\n    },\n    \"item\": [\n      {\n        \"name\": \"This is a folder\",\n        \"description\": \"\",\n        \"item\": [\n          {\n            \"name\": \"Sample POST Request\",\n            \"request\": {\n              \"url\": \"echo.getpostman.com/post\",\n              \"method\": \"POST\",\n              \"header\": [\n                {\n                  \"key\": \"Content-Type\",\n                  \"value\": \"application/json\",\n                  \"description\": \"\"\n                }\n              ],\n              \"body\": {\n                \"mode\": \"raw\",\n                \"raw\": \"{\\n\\t\\\"data\\\": \\\"123\\\"\\n}\"\n              },\n              \"description\": \"This is a sample POST Request\"\n            },\n            \"response\": []\n          }\n        ]\n      },\n      {\n        \"name\": \"Sample GET Request\",\n        \"request\": {\n          \"url\": \"echo.getpostman.com/get\",\n          \"method\": \"GET\",\n          \"header\": [],\n          \"body\": {\n            \"mode\": \"formdata\",\n            \"formdata\": []\n          },\n          \"description\": \"This is a sample GET Request\"\n        },\n        \"response\": []\n      }\n    ]\n  }\n}"
								},
								"url": {
									"raw": "https://api.getpostman.com/collections",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "",
									"name": "Access-Control-Allow-Credentials",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "",
									"name": "Access-Control-Allow-Headers",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "",
									"name": "Access-Control-Allow-Methods",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "",
									"name": "Access-Control-Allow-Origin",
									"description": ""
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "",
									"name": "Access-Control-Expose-Headers",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Encoding",
									"value": "gzip",
									"name": "Content-Encoding",
									"description": ""
								},
								{
									"key": "Content-Length",
									"value": "109",
									"name": "Content-Length",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Wed, 23 Nov 2016 11:23:49 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "W/\"89-p4nfYdFl+5DEKOdB5g399Q\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Server",
									"value": "nginx/1.8.0",
									"name": "Server",
									"description": ""
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60",
									"name": "X-RateLimit-Limit",
									"description": ""
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "57",
									"name": "X-RateLimit-Remaining",
									"description": ""
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1479900267",
									"name": "X-RateLimit-Reset",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"collection\":{\"id\":\"2412a72c-1d8e-491b-aced-93809c0e94e9\",\"name\":\"Sample Collection\",\"uid\":\"5852-2412a72c-1d8e-491b-aced-93809c0e94e9\"}}"
						},
						{
							"name": "Collection Already Exists",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Api-Key",
										"value": "{{postman_api_key}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"collection\": {\n    \"variables\": [],\n    \"info\": {\n      \"_postman_id\": \"ac03df1d-90f0-401d-aa57-39c395253c80\",\n      \"name\": \"Sample Collection\",\n      \"description\": \"This is just a sample collection.\",\n      \"schema\": \"https://schema.getpostman.com/json/collection/v2.0.0/collection.json\"\n    },\n    \"item\": [\n      {\n        \"name\": \"This is a folder\",\n        \"description\": \"\",\n        \"item\": [\n          {\n            \"name\": \"Sample POST Request\",\n            \"request\": {\n              \"url\": \"echo.getpostman.com/post\",\n              \"method\": \"POST\",\n              \"header\": [\n                {\n                  \"key\": \"Content-Type\",\n                  \"value\": \"application/json\",\n                  \"description\": \"\"\n                }\n              ],\n              \"body\": {\n                \"mode\": \"raw\",\n                \"raw\": \"{\\n\\t\\\"data\\\": \\\"123\\\"\\n}\"\n              },\n              \"description\": \"This is a sample POST Request\"\n            },\n            \"response\": []\n          }\n        ]\n      },\n      {\n        \"name\": \"Sample GET Request\",\n        \"request\": {\n          \"url\": \"echo.getpostman.com/get\",\n          \"method\": \"GET\",\n          \"header\": [],\n          \"body\": {\n            \"mode\": \"formdata\",\n            \"formdata\": []\n          },\n          \"description\": \"This is a sample GET Request\"\n        },\n        \"response\": []\n      }\n    ]\n  }\n}"
								},
								"url": {
									"raw": "https://api.getpostman.com/collections",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "",
									"name": "Access-Control-Allow-Credentials",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "",
									"name": "Access-Control-Allow-Headers",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "",
									"name": "Access-Control-Allow-Methods",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "",
									"name": "Access-Control-Allow-Origin",
									"description": ""
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "",
									"name": "Access-Control-Expose-Headers",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Length",
									"value": "162",
									"name": "Content-Length",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Wed, 23 Nov 2016 11:26:15 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "W/\"a2-6Yn0MohF7SWjZhtKpPnEAQ\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Server",
									"value": "nginx/1.8.0",
									"name": "Server",
									"description": ""
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60",
									"name": "X-RateLimit-Limit",
									"description": ""
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "58",
									"name": "X-RateLimit-Remaining",
									"description": ""
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1479900431",
									"name": "X-RateLimit-Reset",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"error\":{\"name\":\"instanceFoundError\",\"message\":\"The specified item already exists.\",\"details\":{\"item\":\"collection\",\"id\":\"ac03df1d-90f0-401d-aa57-39c395253c80\"}}}"
						},
						{
							"name": "Malformed Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Api-Key",
										"value": "{{postman_api_key}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"collection\": {\n    \"variables\": [],\n    \"info\": {\n      \"description\": \"This is just a sample collection.\",\n      \"schema\": \"https://schema.getpostman.com/json/collection/v2.0.0/collection.json\"\n    },\n    \"item\": [\n      {\n        \"name\": \"This is a folder\",\n        \"description\": \"\",\n        \"item\": [\n          {\n            \"name\": \"Sample POST Request\",\n            \"request\": {\n              \"url\": \"echo.getpostman.com/post\",\n              \"method\": \"POST\",\n              \"header\": [\n                {\n                  \"key\": \"Content-Type\",\n                  \"value\": \"application/json\",\n                  \"description\": \"\"\n                }\n              ],\n              \"body\": {\n                \"mode\": \"raw\",\n                \"raw\": \"{\\n\\t\\\"data\\\": \\\"123\\\"\\n}\"\n              },\n              \"description\": \"This is a sample POST Request\"\n            },\n            \"response\": []\n          }\n        ]\n      },\n      {\n        \"name\": \"Sample GET Request\",\n        \"request\": {\n          \"url\": \"echo.getpostman.com/get\",\n          \"method\": \"GET\",\n          \"header\": [],\n          \"body\": {\n            \"mode\": \"formdata\",\n            \"formdata\": []\n          },\n          \"description\": \"This is a sample GET Request\"\n        },\n        \"response\": []\n      }\n    ]\n  }\n}"
								},
								"url": {
									"raw": "https://api.getpostman.com/collections",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "",
									"name": "Access-Control-Allow-Credentials",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "",
									"name": "Access-Control-Allow-Headers",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "",
									"name": "Access-Control-Allow-Methods",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "",
									"name": "Access-Control-Allow-Origin",
									"description": ""
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "",
									"name": "Access-Control-Expose-Headers",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Length",
									"value": "94",
									"name": "Content-Length",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Wed, 23 Nov 2016 11:24:15 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "W/\"5e-pljLJKY51ijXQuNsHOu0qw\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Server",
									"value": "nginx/1.8.0",
									"name": "Server",
									"description": ""
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60",
									"name": "X-RateLimit-Limit",
									"description": ""
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "55",
									"name": "X-RateLimit-Remaining",
									"description": ""
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1479900267",
									"name": "X-RateLimit-Reset",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"error\":{\"name\":\"malformedRequestError\",\"message\":\"Missing required property: name at info\"}}"
						}
					]
				},
				{
					"name": "Update track",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is ok\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": 1,\n    \"title\": \"Color gitano\",\n    \"duration\": 220,\n    \"preview\": \"https://cdns-preview-f.dzcdn.net/stream/c-f981754c689d1819ed89bacbf4d53f75-3.mp3\",\n    \"album\": {\n        \"id\": 3\n    }\n}\n"
						},
						"url": {
							"raw": "{{base_url}}/tracks/{{new_track_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"tracks",
								"{{new_track_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Create Collection in a Workspace",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Api-Key",
										"value": "{{postman_api_key}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"collection\": {\n    \"info\": {\n      \"name\": \"Sample Collection {{$randomInt}}\",\n      \"description\": \"This is just a sample collection.\",\n      \"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\"\n    },\n    \"item\": [\n      {\n        \"name\": \"This is a folder\",\n        \"item\": [\n          {\n            \"name\": \"Sample POST Request\",\n            \"request\": {\n              \"url\": \"https://postman-echo.com/post\",\n              \"method\": \"POST\",\n              \"header\": [\n                {\n                  \"key\": \"Content-Type\",\n                  \"value\": \"application/json\"\n                }\n              ],\n              \"body\": {\n                \"mode\": \"raw\",\n                \"raw\": \"{\\\"data\\\": \\\"123\\\"}\"\n              },\n              \"description\": \"This is a sample POST Request\"\n            }\n          }\n        ]\n      },\n      {\n        \"name\": \"Sample GET Request\",\n        \"request\": {\n          \"url\": \"https://postman-echo/get\",\n          \"method\": \"GET\",\n          \"description\": \"This is a sample GET Request\"\n        }\n      }\n    ]\n  }\n}"
								},
								"url": {
									"raw": "https://api.getpostman.com/collections?workspace={{workspace_id}}",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections"
									],
									"query": [
										{
											"key": "workspace",
											"value": "{{workspace_id}}",
											"description": "The workspace ID in which the collection is to be created"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n\t\"collection\": {\n\t\t\"id\": \"2412a72c-1d8e-491b-aced-93809c0e94e9\",\n    \"name\": \"Sample Collection\",\n    \"uid\": \"5852-2412a72c-1d8e-491b-aced-93809c0e94e9\"\n\t}\n}"
						},
						{
							"name": "Collection Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Api-Key",
										"value": "{{postman_api_key}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"collection\": {\n    \"variables\": [],\n    \"info\": {\n      \"name\": \"Sample Collection\",\n      \"description\": \"This is just a sample collection.\",\n      \"schema\": \"https://schema.getpostman.com/json/collection/v2.0.0/collection.json\"\n    },\n    \"item\": [\n      {\n        \"name\": \"This is a folder\",\n        \"description\": \"\",\n        \"item\": [\n          {\n            \"name\": \"Sample POST Request\",\n            \"request\": {\n              \"url\": \"echo.getpostman.com/post\",\n              \"method\": \"POST\",\n              \"header\": [\n                {\n                  \"key\": \"Content-Type\",\n                  \"value\": \"application/json\",\n                  \"description\": \"\"\n                }\n              ],\n              \"body\": {\n                \"mode\": \"raw\",\n                \"raw\": \"{\\n\\t\\\"data\\\": \\\"123\\\"\\n}\"\n              },\n              \"description\": \"This is a sample POST Request\"\n            },\n            \"response\": []\n          }\n        ]\n      },\n      {\n        \"name\": \"Sample GET Request\",\n        \"request\": {\n          \"url\": \"echo.getpostman.com/get\",\n          \"method\": \"GET\",\n          \"header\": [],\n          \"body\": {\n            \"mode\": \"formdata\",\n            \"formdata\": []\n          },\n          \"description\": \"This is a sample GET Request\"\n        },\n        \"response\": []\n      }\n    ]\n  }\n}"
								},
								"url": {
									"raw": "https://api.getpostman.com/collections",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "",
									"name": "Access-Control-Allow-Credentials",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "",
									"name": "Access-Control-Allow-Headers",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "",
									"name": "Access-Control-Allow-Methods",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "",
									"name": "Access-Control-Allow-Origin",
									"description": ""
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "",
									"name": "Access-Control-Expose-Headers",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Encoding",
									"value": "gzip",
									"name": "Content-Encoding",
									"description": ""
								},
								{
									"key": "Content-Length",
									"value": "109",
									"name": "Content-Length",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Wed, 23 Nov 2016 11:23:49 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "W/\"89-p4nfYdFl+5DEKOdB5g399Q\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Server",
									"value": "nginx/1.8.0",
									"name": "Server",
									"description": ""
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60",
									"name": "X-RateLimit-Limit",
									"description": ""
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "57",
									"name": "X-RateLimit-Remaining",
									"description": ""
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1479900267",
									"name": "X-RateLimit-Reset",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"collection\":{\"id\":\"2412a72c-1d8e-491b-aced-93809c0e94e9\",\"name\":\"Sample Collection\",\"uid\":\"5852-2412a72c-1d8e-491b-aced-93809c0e94e9\"}}"
						},
						{
							"name": "Malformed Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Api-Key",
										"value": "{{postman_api_key}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"collection\": {\n    \"variables\": [],\n    \"info\": {\n      \"description\": \"This is just a sample collection.\",\n      \"schema\": \"https://schema.getpostman.com/json/collection/v2.0.0/collection.json\"\n    },\n    \"item\": [\n      {\n        \"name\": \"This is a folder\",\n        \"description\": \"\",\n        \"item\": [\n          {\n            \"name\": \"Sample POST Request\",\n            \"request\": {\n              \"url\": \"echo.getpostman.com/post\",\n              \"method\": \"POST\",\n              \"header\": [\n                {\n                  \"key\": \"Content-Type\",\n                  \"value\": \"application/json\",\n                  \"description\": \"\"\n                }\n              ],\n              \"body\": {\n                \"mode\": \"raw\",\n                \"raw\": \"{\\n\\t\\\"data\\\": \\\"123\\\"\\n}\"\n              },\n              \"description\": \"This is a sample POST Request\"\n            },\n            \"response\": []\n          }\n        ]\n      },\n      {\n        \"name\": \"Sample GET Request\",\n        \"request\": {\n          \"url\": \"echo.getpostman.com/get\",\n          \"method\": \"GET\",\n          \"header\": [],\n          \"body\": {\n            \"mode\": \"formdata\",\n            \"formdata\": []\n          },\n          \"description\": \"This is a sample GET Request\"\n        },\n        \"response\": []\n      }\n    ]\n  }\n}"
								},
								"url": {
									"raw": "https://api.getpostman.com/collections",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "",
									"name": "Access-Control-Allow-Credentials",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "",
									"name": "Access-Control-Allow-Headers",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "",
									"name": "Access-Control-Allow-Methods",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "",
									"name": "Access-Control-Allow-Origin",
									"description": ""
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "",
									"name": "Access-Control-Expose-Headers",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Length",
									"value": "94",
									"name": "Content-Length",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Wed, 23 Nov 2016 11:24:15 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "W/\"5e-pljLJKY51ijXQuNsHOu0qw\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Server",
									"value": "nginx/1.8.0",
									"name": "Server",
									"description": ""
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60",
									"name": "X-RateLimit-Limit",
									"description": ""
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "55",
									"name": "X-RateLimit-Remaining",
									"description": ""
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1479900267",
									"name": "X-RateLimit-Reset",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"error\":{\"name\":\"malformedRequestError\",\"message\":\"Missing required property: name at info\"}}"
						},
						{
							"name": "Collection Already Exists",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Api-Key",
										"value": "{{postman_api_key}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"collection\": {\n    \"variables\": [],\n    \"info\": {\n      \"_postman_id\": \"ac03df1d-90f0-401d-aa57-39c395253c80\",\n      \"name\": \"Sample Collection\",\n      \"description\": \"This is just a sample collection.\",\n      \"schema\": \"https://schema.getpostman.com/json/collection/v2.0.0/collection.json\"\n    },\n    \"item\": [\n      {\n        \"name\": \"This is a folder\",\n        \"description\": \"\",\n        \"item\": [\n          {\n            \"name\": \"Sample POST Request\",\n            \"request\": {\n              \"url\": \"echo.getpostman.com/post\",\n              \"method\": \"POST\",\n              \"header\": [\n                {\n                  \"key\": \"Content-Type\",\n                  \"value\": \"application/json\",\n                  \"description\": \"\"\n                }\n              ],\n              \"body\": {\n                \"mode\": \"raw\",\n                \"raw\": \"{\\n\\t\\\"data\\\": \\\"123\\\"\\n}\"\n              },\n              \"description\": \"This is a sample POST Request\"\n            },\n            \"response\": []\n          }\n        ]\n      },\n      {\n        \"name\": \"Sample GET Request\",\n        \"request\": {\n          \"url\": \"echo.getpostman.com/get\",\n          \"method\": \"GET\",\n          \"header\": [],\n          \"body\": {\n            \"mode\": \"formdata\",\n            \"formdata\": []\n          },\n          \"description\": \"This is a sample GET Request\"\n        },\n        \"response\": []\n      }\n    ]\n  }\n}"
								},
								"url": {
									"raw": "https://api.getpostman.com/collections",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "",
									"name": "Access-Control-Allow-Credentials",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "",
									"name": "Access-Control-Allow-Headers",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "",
									"name": "Access-Control-Allow-Methods",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "",
									"name": "Access-Control-Allow-Origin",
									"description": ""
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "",
									"name": "Access-Control-Expose-Headers",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Length",
									"value": "162",
									"name": "Content-Length",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Wed, 23 Nov 2016 11:26:15 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "W/\"a2-6Yn0MohF7SWjZhtKpPnEAQ\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Server",
									"value": "nginx/1.8.0",
									"name": "Server",
									"description": ""
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60",
									"name": "X-RateLimit-Limit",
									"description": ""
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "58",
									"name": "X-RateLimit-Remaining",
									"description": ""
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1479900431",
									"name": "X-RateLimit-Reset",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"error\":{\"name\":\"instanceFoundError\",\"message\":\"The specified item already exists.\",\"details\":{\"item\":\"collection\",\"id\":\"ac03df1d-90f0-401d-aa57-39c395253c80\"}}}"
						}
					]
				},
				{
					"name": "delete track",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/tracks/{{new_track_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"tracks",
								"{{new_track_id}}"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "playlist",
			"item": [
				{
					"name": "all playlist",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/playlists",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"playlists"
							]
						}
					},
					"response": []
				},
				{
					"name": "get playlist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response json should contain one collection\", function () {\r",
									"    pm.expect(pm.response.json()).to.have.property('id');\r",
									"    pm.expect(pm.response.json()).to.have.property('name');\r",
									"    pm.expect(pm.response.json()).to.have.property('tracks');\r",
									"});\r",
									"\r",
									"pm.test(\"test id\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id).greaterThan(0);\r",
									"});\r",
									"\r",
									"if (pm.environment.get(\"playlist_id\") == 1) {\r",
									"    pm.test(\"test values\", function () {\r",
									"        var jsonData = pm.response.json();\r",
									"        pm.expect(jsonData.id).eql(1);\r",
									"        pm.expect(jsonData.name).eql('celtic');\r",
									"        pm.expect(jsonData.tracks.length).eql(3);\r",
									"    });\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/playlists/{{playlist_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"playlists",
								"{{playlist_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "search playlists",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/playlists?search=tic",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"playlists"
							],
							"query": [
								{
									"key": "search",
									"value": "tic"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create playlist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// maj de la nouvelle playlist dans l'environnement",
									"var jsonData = JSON.parse(responseBody);",
									"pm.environment.set(\"new_playlist_id\", jsonData.id);",
									"",
									"// tests ",
									"",
									"pm.test(\"response is ok\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"response json should contain one collection\", function () {",
									"    pm.expect(pm.response.json()).to.have.property('id');",
									"    pm.expect(pm.response.json()).to.have.property('name');",
									"    pm.expect(pm.response.json()).to.have.property('tracks');",
									"});",
									"",
									"pm.test(\"test id\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).greaterThan(0);",
									"});",
									"",
									"pm.test(\"test values\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.name).eql('travail');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": 0,\n    \"name\": \"travail\",\n    \"tracks\": [\n            {\n                \"id\": 20\n            },\n            {\n                \"id\": 14\n            },\n            {\n                \"id\": 3\n            },\n            {\n                \"id\": 23\n            }\n    ]\n}"
						},
						"url": {
							"raw": "{{base_url}}/playlists",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"playlists"
							]
						}
					},
					"response": [
						{
							"name": "Create Collection in a Workspace",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Api-Key",
										"value": "{{postman_api_key}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"collection\": {\n    \"info\": {\n      \"name\": \"Sample Collection {{$randomInt}}\",\n      \"description\": \"This is just a sample collection.\",\n      \"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\"\n    },\n    \"item\": [\n      {\n        \"name\": \"This is a folder\",\n        \"item\": [\n          {\n            \"name\": \"Sample POST Request\",\n            \"request\": {\n              \"url\": \"https://postman-echo.com/post\",\n              \"method\": \"POST\",\n              \"header\": [\n                {\n                  \"key\": \"Content-Type\",\n                  \"value\": \"application/json\"\n                }\n              ],\n              \"body\": {\n                \"mode\": \"raw\",\n                \"raw\": \"{\\\"data\\\": \\\"123\\\"}\"\n              },\n              \"description\": \"This is a sample POST Request\"\n            }\n          }\n        ]\n      },\n      {\n        \"name\": \"Sample GET Request\",\n        \"request\": {\n          \"url\": \"https://postman-echo/get\",\n          \"method\": \"GET\",\n          \"description\": \"This is a sample GET Request\"\n        }\n      }\n    ]\n  }\n}"
								},
								"url": {
									"raw": "https://api.getpostman.com/collections?workspace={{workspace_id}}",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections"
									],
									"query": [
										{
											"key": "workspace",
											"value": "{{workspace_id}}",
											"description": "The workspace ID in which the collection is to be created"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n\t\"collection\": {\n\t\t\"id\": \"2412a72c-1d8e-491b-aced-93809c0e94e9\",\n    \"name\": \"Sample Collection\",\n    \"uid\": \"5852-2412a72c-1d8e-491b-aced-93809c0e94e9\"\n\t}\n}"
						},
						{
							"name": "Collection Already Exists",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Api-Key",
										"value": "{{postman_api_key}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"collection\": {\n    \"variables\": [],\n    \"info\": {\n      \"_postman_id\": \"ac03df1d-90f0-401d-aa57-39c395253c80\",\n      \"name\": \"Sample Collection\",\n      \"description\": \"This is just a sample collection.\",\n      \"schema\": \"https://schema.getpostman.com/json/collection/v2.0.0/collection.json\"\n    },\n    \"item\": [\n      {\n        \"name\": \"This is a folder\",\n        \"description\": \"\",\n        \"item\": [\n          {\n            \"name\": \"Sample POST Request\",\n            \"request\": {\n              \"url\": \"echo.getpostman.com/post\",\n              \"method\": \"POST\",\n              \"header\": [\n                {\n                  \"key\": \"Content-Type\",\n                  \"value\": \"application/json\",\n                  \"description\": \"\"\n                }\n              ],\n              \"body\": {\n                \"mode\": \"raw\",\n                \"raw\": \"{\\n\\t\\\"data\\\": \\\"123\\\"\\n}\"\n              },\n              \"description\": \"This is a sample POST Request\"\n            },\n            \"response\": []\n          }\n        ]\n      },\n      {\n        \"name\": \"Sample GET Request\",\n        \"request\": {\n          \"url\": \"echo.getpostman.com/get\",\n          \"method\": \"GET\",\n          \"header\": [],\n          \"body\": {\n            \"mode\": \"formdata\",\n            \"formdata\": []\n          },\n          \"description\": \"This is a sample GET Request\"\n        },\n        \"response\": []\n      }\n    ]\n  }\n}"
								},
								"url": {
									"raw": "https://api.getpostman.com/collections",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "",
									"name": "Access-Control-Allow-Credentials",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "",
									"name": "Access-Control-Allow-Headers",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "",
									"name": "Access-Control-Allow-Methods",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "",
									"name": "Access-Control-Allow-Origin",
									"description": ""
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "",
									"name": "Access-Control-Expose-Headers",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Length",
									"value": "162",
									"name": "Content-Length",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Wed, 23 Nov 2016 11:26:15 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "W/\"a2-6Yn0MohF7SWjZhtKpPnEAQ\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Server",
									"value": "nginx/1.8.0",
									"name": "Server",
									"description": ""
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60",
									"name": "X-RateLimit-Limit",
									"description": ""
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "58",
									"name": "X-RateLimit-Remaining",
									"description": ""
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1479900431",
									"name": "X-RateLimit-Reset",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"error\":{\"name\":\"instanceFoundError\",\"message\":\"The specified item already exists.\",\"details\":{\"item\":\"collection\",\"id\":\"ac03df1d-90f0-401d-aa57-39c395253c80\"}}}"
						},
						{
							"name": "Malformed Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Api-Key",
										"value": "{{postman_api_key}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"collection\": {\n    \"variables\": [],\n    \"info\": {\n      \"description\": \"This is just a sample collection.\",\n      \"schema\": \"https://schema.getpostman.com/json/collection/v2.0.0/collection.json\"\n    },\n    \"item\": [\n      {\n        \"name\": \"This is a folder\",\n        \"description\": \"\",\n        \"item\": [\n          {\n            \"name\": \"Sample POST Request\",\n            \"request\": {\n              \"url\": \"echo.getpostman.com/post\",\n              \"method\": \"POST\",\n              \"header\": [\n                {\n                  \"key\": \"Content-Type\",\n                  \"value\": \"application/json\",\n                  \"description\": \"\"\n                }\n              ],\n              \"body\": {\n                \"mode\": \"raw\",\n                \"raw\": \"{\\n\\t\\\"data\\\": \\\"123\\\"\\n}\"\n              },\n              \"description\": \"This is a sample POST Request\"\n            },\n            \"response\": []\n          }\n        ]\n      },\n      {\n        \"name\": \"Sample GET Request\",\n        \"request\": {\n          \"url\": \"echo.getpostman.com/get\",\n          \"method\": \"GET\",\n          \"header\": [],\n          \"body\": {\n            \"mode\": \"formdata\",\n            \"formdata\": []\n          },\n          \"description\": \"This is a sample GET Request\"\n        },\n        \"response\": []\n      }\n    ]\n  }\n}"
								},
								"url": {
									"raw": "https://api.getpostman.com/collections",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "",
									"name": "Access-Control-Allow-Credentials",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "",
									"name": "Access-Control-Allow-Headers",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "",
									"name": "Access-Control-Allow-Methods",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "",
									"name": "Access-Control-Allow-Origin",
									"description": ""
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "",
									"name": "Access-Control-Expose-Headers",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Length",
									"value": "94",
									"name": "Content-Length",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Wed, 23 Nov 2016 11:24:15 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "W/\"5e-pljLJKY51ijXQuNsHOu0qw\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Server",
									"value": "nginx/1.8.0",
									"name": "Server",
									"description": ""
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60",
									"name": "X-RateLimit-Limit",
									"description": ""
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "55",
									"name": "X-RateLimit-Remaining",
									"description": ""
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1479900267",
									"name": "X-RateLimit-Reset",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"error\":{\"name\":\"malformedRequestError\",\"message\":\"Missing required property: name at info\"}}"
						},
						{
							"name": "Collection Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Api-Key",
										"value": "{{postman_api_key}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"collection\": {\n    \"variables\": [],\n    \"info\": {\n      \"name\": \"Sample Collection\",\n      \"description\": \"This is just a sample collection.\",\n      \"schema\": \"https://schema.getpostman.com/json/collection/v2.0.0/collection.json\"\n    },\n    \"item\": [\n      {\n        \"name\": \"This is a folder\",\n        \"description\": \"\",\n        \"item\": [\n          {\n            \"name\": \"Sample POST Request\",\n            \"request\": {\n              \"url\": \"echo.getpostman.com/post\",\n              \"method\": \"POST\",\n              \"header\": [\n                {\n                  \"key\": \"Content-Type\",\n                  \"value\": \"application/json\",\n                  \"description\": \"\"\n                }\n              ],\n              \"body\": {\n                \"mode\": \"raw\",\n                \"raw\": \"{\\n\\t\\\"data\\\": \\\"123\\\"\\n}\"\n              },\n              \"description\": \"This is a sample POST Request\"\n            },\n            \"response\": []\n          }\n        ]\n      },\n      {\n        \"name\": \"Sample GET Request\",\n        \"request\": {\n          \"url\": \"echo.getpostman.com/get\",\n          \"method\": \"GET\",\n          \"header\": [],\n          \"body\": {\n            \"mode\": \"formdata\",\n            \"formdata\": []\n          },\n          \"description\": \"This is a sample GET Request\"\n        },\n        \"response\": []\n      }\n    ]\n  }\n}"
								},
								"url": {
									"raw": "https://api.getpostman.com/collections",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "",
									"name": "Access-Control-Allow-Credentials",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "",
									"name": "Access-Control-Allow-Headers",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "",
									"name": "Access-Control-Allow-Methods",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "",
									"name": "Access-Control-Allow-Origin",
									"description": ""
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "",
									"name": "Access-Control-Expose-Headers",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Encoding",
									"value": "gzip",
									"name": "Content-Encoding",
									"description": ""
								},
								{
									"key": "Content-Length",
									"value": "109",
									"name": "Content-Length",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Wed, 23 Nov 2016 11:23:49 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "W/\"89-p4nfYdFl+5DEKOdB5g399Q\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Server",
									"value": "nginx/1.8.0",
									"name": "Server",
									"description": ""
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60",
									"name": "X-RateLimit-Limit",
									"description": ""
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "57",
									"name": "X-RateLimit-Remaining",
									"description": ""
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1479900267",
									"name": "X-RateLimit-Reset",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"collection\":{\"id\":\"2412a72c-1d8e-491b-aced-93809c0e94e9\",\"name\":\"Sample Collection\",\"uid\":\"5852-2412a72c-1d8e-491b-aced-93809c0e94e9\"}}"
						}
					]
				},
				{
					"name": "Update playlist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is ok\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": 3,\n    \"name\": \"travail à la maison\",\n    \"tracks\": [\n            {\n                \"id\": 20\n            },\n            {\n                \"id\": 3\n            },\n            {\n                \"id\": 23\n            }\n    ]\n}"
						},
						"url": {
							"raw": "{{base_url}}/playlists/{{new_playlist_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"playlists",
								"{{new_playlist_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Collection Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Api-Key",
										"value": "{{postman_api_key}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"collection\": {\n    \"variables\": [],\n    \"info\": {\n      \"name\": \"Sample Collection\",\n      \"description\": \"This is just a sample collection.\",\n      \"schema\": \"https://schema.getpostman.com/json/collection/v2.0.0/collection.json\"\n    },\n    \"item\": [\n      {\n        \"name\": \"This is a folder\",\n        \"description\": \"\",\n        \"item\": [\n          {\n            \"name\": \"Sample POST Request\",\n            \"request\": {\n              \"url\": \"echo.getpostman.com/post\",\n              \"method\": \"POST\",\n              \"header\": [\n                {\n                  \"key\": \"Content-Type\",\n                  \"value\": \"application/json\",\n                  \"description\": \"\"\n                }\n              ],\n              \"body\": {\n                \"mode\": \"raw\",\n                \"raw\": \"{\\n\\t\\\"data\\\": \\\"123\\\"\\n}\"\n              },\n              \"description\": \"This is a sample POST Request\"\n            },\n            \"response\": []\n          }\n        ]\n      },\n      {\n        \"name\": \"Sample GET Request\",\n        \"request\": {\n          \"url\": \"echo.getpostman.com/get\",\n          \"method\": \"GET\",\n          \"header\": [],\n          \"body\": {\n            \"mode\": \"formdata\",\n            \"formdata\": []\n          },\n          \"description\": \"This is a sample GET Request\"\n        },\n        \"response\": []\n      }\n    ]\n  }\n}"
								},
								"url": {
									"raw": "https://api.getpostman.com/collections",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "",
									"name": "Access-Control-Allow-Credentials",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "",
									"name": "Access-Control-Allow-Headers",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "",
									"name": "Access-Control-Allow-Methods",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "",
									"name": "Access-Control-Allow-Origin",
									"description": ""
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "",
									"name": "Access-Control-Expose-Headers",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Encoding",
									"value": "gzip",
									"name": "Content-Encoding",
									"description": ""
								},
								{
									"key": "Content-Length",
									"value": "109",
									"name": "Content-Length",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Wed, 23 Nov 2016 11:23:49 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "W/\"89-p4nfYdFl+5DEKOdB5g399Q\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Server",
									"value": "nginx/1.8.0",
									"name": "Server",
									"description": ""
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60",
									"name": "X-RateLimit-Limit",
									"description": ""
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "57",
									"name": "X-RateLimit-Remaining",
									"description": ""
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1479900267",
									"name": "X-RateLimit-Reset",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"collection\":{\"id\":\"2412a72c-1d8e-491b-aced-93809c0e94e9\",\"name\":\"Sample Collection\",\"uid\":\"5852-2412a72c-1d8e-491b-aced-93809c0e94e9\"}}"
						},
						{
							"name": "Create Collection in a Workspace",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Api-Key",
										"value": "{{postman_api_key}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"collection\": {\n    \"info\": {\n      \"name\": \"Sample Collection {{$randomInt}}\",\n      \"description\": \"This is just a sample collection.\",\n      \"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\"\n    },\n    \"item\": [\n      {\n        \"name\": \"This is a folder\",\n        \"item\": [\n          {\n            \"name\": \"Sample POST Request\",\n            \"request\": {\n              \"url\": \"https://postman-echo.com/post\",\n              \"method\": \"POST\",\n              \"header\": [\n                {\n                  \"key\": \"Content-Type\",\n                  \"value\": \"application/json\"\n                }\n              ],\n              \"body\": {\n                \"mode\": \"raw\",\n                \"raw\": \"{\\\"data\\\": \\\"123\\\"}\"\n              },\n              \"description\": \"This is a sample POST Request\"\n            }\n          }\n        ]\n      },\n      {\n        \"name\": \"Sample GET Request\",\n        \"request\": {\n          \"url\": \"https://postman-echo/get\",\n          \"method\": \"GET\",\n          \"description\": \"This is a sample GET Request\"\n        }\n      }\n    ]\n  }\n}"
								},
								"url": {
									"raw": "https://api.getpostman.com/collections?workspace={{workspace_id}}",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections"
									],
									"query": [
										{
											"key": "workspace",
											"value": "{{workspace_id}}",
											"description": "The workspace ID in which the collection is to be created"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n\t\"collection\": {\n\t\t\"id\": \"2412a72c-1d8e-491b-aced-93809c0e94e9\",\n    \"name\": \"Sample Collection\",\n    \"uid\": \"5852-2412a72c-1d8e-491b-aced-93809c0e94e9\"\n\t}\n}"
						},
						{
							"name": "Malformed Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Api-Key",
										"value": "{{postman_api_key}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"collection\": {\n    \"variables\": [],\n    \"info\": {\n      \"description\": \"This is just a sample collection.\",\n      \"schema\": \"https://schema.getpostman.com/json/collection/v2.0.0/collection.json\"\n    },\n    \"item\": [\n      {\n        \"name\": \"This is a folder\",\n        \"description\": \"\",\n        \"item\": [\n          {\n            \"name\": \"Sample POST Request\",\n            \"request\": {\n              \"url\": \"echo.getpostman.com/post\",\n              \"method\": \"POST\",\n              \"header\": [\n                {\n                  \"key\": \"Content-Type\",\n                  \"value\": \"application/json\",\n                  \"description\": \"\"\n                }\n              ],\n              \"body\": {\n                \"mode\": \"raw\",\n                \"raw\": \"{\\n\\t\\\"data\\\": \\\"123\\\"\\n}\"\n              },\n              \"description\": \"This is a sample POST Request\"\n            },\n            \"response\": []\n          }\n        ]\n      },\n      {\n        \"name\": \"Sample GET Request\",\n        \"request\": {\n          \"url\": \"echo.getpostman.com/get\",\n          \"method\": \"GET\",\n          \"header\": [],\n          \"body\": {\n            \"mode\": \"formdata\",\n            \"formdata\": []\n          },\n          \"description\": \"This is a sample GET Request\"\n        },\n        \"response\": []\n      }\n    ]\n  }\n}"
								},
								"url": {
									"raw": "https://api.getpostman.com/collections",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "",
									"name": "Access-Control-Allow-Credentials",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "",
									"name": "Access-Control-Allow-Headers",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "",
									"name": "Access-Control-Allow-Methods",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "",
									"name": "Access-Control-Allow-Origin",
									"description": ""
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "",
									"name": "Access-Control-Expose-Headers",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Length",
									"value": "94",
									"name": "Content-Length",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Wed, 23 Nov 2016 11:24:15 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "W/\"5e-pljLJKY51ijXQuNsHOu0qw\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Server",
									"value": "nginx/1.8.0",
									"name": "Server",
									"description": ""
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60",
									"name": "X-RateLimit-Limit",
									"description": ""
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "55",
									"name": "X-RateLimit-Remaining",
									"description": ""
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1479900267",
									"name": "X-RateLimit-Reset",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"error\":{\"name\":\"malformedRequestError\",\"message\":\"Missing required property: name at info\"}}"
						},
						{
							"name": "Collection Already Exists",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Api-Key",
										"value": "{{postman_api_key}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"collection\": {\n    \"variables\": [],\n    \"info\": {\n      \"_postman_id\": \"ac03df1d-90f0-401d-aa57-39c395253c80\",\n      \"name\": \"Sample Collection\",\n      \"description\": \"This is just a sample collection.\",\n      \"schema\": \"https://schema.getpostman.com/json/collection/v2.0.0/collection.json\"\n    },\n    \"item\": [\n      {\n        \"name\": \"This is a folder\",\n        \"description\": \"\",\n        \"item\": [\n          {\n            \"name\": \"Sample POST Request\",\n            \"request\": {\n              \"url\": \"echo.getpostman.com/post\",\n              \"method\": \"POST\",\n              \"header\": [\n                {\n                  \"key\": \"Content-Type\",\n                  \"value\": \"application/json\",\n                  \"description\": \"\"\n                }\n              ],\n              \"body\": {\n                \"mode\": \"raw\",\n                \"raw\": \"{\\n\\t\\\"data\\\": \\\"123\\\"\\n}\"\n              },\n              \"description\": \"This is a sample POST Request\"\n            },\n            \"response\": []\n          }\n        ]\n      },\n      {\n        \"name\": \"Sample GET Request\",\n        \"request\": {\n          \"url\": \"echo.getpostman.com/get\",\n          \"method\": \"GET\",\n          \"header\": [],\n          \"body\": {\n            \"mode\": \"formdata\",\n            \"formdata\": []\n          },\n          \"description\": \"This is a sample GET Request\"\n        },\n        \"response\": []\n      }\n    ]\n  }\n}"
								},
								"url": {
									"raw": "https://api.getpostman.com/collections",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "",
									"name": "Access-Control-Allow-Credentials",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "",
									"name": "Access-Control-Allow-Headers",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "",
									"name": "Access-Control-Allow-Methods",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "",
									"name": "Access-Control-Allow-Origin",
									"description": ""
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "",
									"name": "Access-Control-Expose-Headers",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Length",
									"value": "162",
									"name": "Content-Length",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Wed, 23 Nov 2016 11:26:15 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "W/\"a2-6Yn0MohF7SWjZhtKpPnEAQ\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Server",
									"value": "nginx/1.8.0",
									"name": "Server",
									"description": ""
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60",
									"name": "X-RateLimit-Limit",
									"description": ""
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "58",
									"name": "X-RateLimit-Remaining",
									"description": ""
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1479900431",
									"name": "X-RateLimit-Reset",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"error\":{\"name\":\"instanceFoundError\",\"message\":\"The specified item already exists.\",\"details\":{\"item\":\"collection\",\"id\":\"ac03df1d-90f0-401d-aa57-39c395253c80\"}}}"
						}
					]
				},
				{
					"name": "delete playlist",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/playlists/{{new_playlist_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"playlists",
								"{{new_playlist_id}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}